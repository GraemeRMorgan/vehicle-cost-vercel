// This code is working, but it's reading from a local array

const MARGIN = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 };
const WIDTH = 800 - MARGIN.LEFT - MARGIN.RIGHT;
const HEIGHT = 600 - MARGIN.TOP - MARGIN.BOTTOM;

const data = [
  {
    vehicles: [
      {
        type: "gas",
        cat: "compact",
        model: "Honda Civic",
        purchase_price: 34720,
        annual_gas: 3485,
        annual_ins: 1800,
        annual_maint: 726,
        mileage: 33,
        resale: 22000,
        resale_ratio: 0.64,
      },
      {
        type: "gas",
        cat: "midsize",
        model: "Subaru Legacy",
        purchase_price: 46000,
        annual_gas: 4404,
        annual_ins: 1800,
        annual_maint: 777,
        mileage: 26,
        resale: 27650,
        resale_ratio: 0.58,
      },
      {
        type: "gas",
        cat: "fullsize",
        model: "Chrysler 300",
        purchase_price: 57120,
        annual_gas: 5064,
        annual_ins: 1800,
        annual_maint: 871,
        mileage: 23,
        resale: 29800,
        resale_ratio: 0.51,
      },
      {
        type: "gas",
        cat: "minivan",
        model: "Chrysler Pacifica",
        purchase_price: 62150,
        annual_gas: 5250,
        annual_ins: 1800,
        annual_maint: 801,
        mileage: 22,
        resale: 25025,
        resale_ratio: 0.41,
      },
      {
        type: "gas",
        cat: "suv",
        model: "Toyota 4Runner",
        purchase_price: 69500,
        annual_gas: 6746,
        annual_ins: 1800,
        annual_maint: 919,
        mileage: 17,
        resale: 47500,
        resale_ratio: 0.68,
      },
      {
        type: "gas",
        cat: "truck",
        model: "Ford f150",
        purchase_price: 78400,
        annual_gas: 6128,
        annual_ins: 1800,
        annual_maint: 1088,
        mileage: 19,
        resale: 33000,
        resale_ratio: 0.42,
      },
      {
        type: "hybrid",
        cat: "compact",
        model: "Toyota Prius",
        purchase_price: 44800,
        annual_gas: 2040,
        annual_ins: 1800,
        annual_maint: 563,
        mileage: 57,
        resale: 28000,
        resale_ratio: 0.62,
      },
      {
        type: "hybrid",
        cat: "midsize",
        model: "Honda Accord",
        purchase_price: 51500,
        annual_gas: 2416,
        annual_ins: 1800,
        annual_maint: 552,
        mileage: 48,
        resale: 27000,
        resale_ratio: 0.52,
      },
      {
        type: "hybrid",
        cat: "fullsize",
        model: "Hyundai Sonata",
        purchase_price: 47800,
        annual_gas: 2445,
        annual_ins: 1800,
        annual_maint: 632,
        mileage: 47,
        resale: 26200,
        resale_ratio: 0.54,
      },
      {
        type: "hybrid",
        cat: "minivan",
        model: "Toyota Sienna",
        purchase_price: 57120,
        annual_gas: 3600,
        annual_ins: 1800,
        annual_maint: 764,
        mileage: 36,
        resale: 36400,
        resale_ratio: 0.63,
      },
      {
        type: "hybrid",
        cat: "suv",
        model: "Honda CRV",
        purchase_price: 54774,
        annual_gas: 3700,
        annual_ins: 1800,
        annual_maint: 562,
        mileage: 37,
        resale: 30000,
        resale_ratio: 0.54,
      },
      {
        type: "hybrid",
        cat: "truck",
        model: "Ford Maverick",
        purchase_price: 44800,
        annual_gas: 3088,
        annual_ins: 1800,
        annual_maint: 773,
        mileage: 37,
        resale: 29000,
        resale_ratio: 0.64,
      },

      {
        type: "phev",
        cat: "compact",
        model: "Prius Prime",
        purchase_price: 52800,
        annual_gas: 1386,
        annual_ins: 1800,
        annual_maint: 502,
        mileage: 114,
        resale: 30000,
        resale_ratio: 0.56,
      },
      {
        type: "phev",
        cat: "fullsize",
        model: "Hyundai Tucson",
        purchase_price: 50400,
        annual_gas: 2064,
        annual_ins: 1800,
        annual_maint: 503,
        mileage: 80,
        resale: 28000,
        resale_ratio: 0.56,
      },

      {
        type: "phev",
        cat: "minivan",
        model: "Chrysler Pacifica PHEV",
        purchase_price: 71820,
        annual_gas: 2318,
        annual_ins: 1800,
        annual_maint: 520,
        mileage: 82,
        resale: 32000,
        resale_ratio: 0.45,
      },
      {
        type: "phev",
        cat: "suv",
        model: "Mitsubishi Outlander",
        purchase_price: 59360,
        annual_gas: 2579,
        annual_ins: 1800,
        annual_maint: 716,
        mileage: 64,
        resale: 26000,
        resale_ratio: 0.44,
      },

      {
        type: "ev",
        cat: "compact",
        model: "Nissan Leaf",
        purchase_price: 52640,
        annual_gas: 629,
        annual_ins: 1800,
        annual_maint: 320,
        mileage: null,
        resale: 18600,
        resale_ratio: 0.34,
      },

      {
        type: "ev",
        cat: "midsize",
        model: "Tesla Model 3",
        purchase_price: 64980,
        annual_gas: 651,
        annual_ins: 1800,
        annual_maint: 400,
        mileage: null,
        resale: 28500,
        resale_ratio: 0.43,
      },
      {
        type: "ev",
        cat: "fullsize",
        model: "Kia Niro",
        purchase_price: 66560,
        annual_gas: 908,
        annual_ins: 1800,
        annual_maint: 599,
        mileage: null,
        resale: 26000,
        resale_ratio: 0.39,
      },
      {
        type: "ev",
        cat: "suv",
        model: "Volvo XC40 Recharge",
        purchase_price: 74100,
        annual_gas: 984,
        annual_ins: 1800,
        annual_maint: 650,
        mileage: null,
        resale: 330000,
        resale_ratio: 0.4,
      },
      {
        type: "ev",
        cat: "truck",
        model: "Ford Lightning",
        purchase_price: 77520,
        annual_gas: 965,
        annual_ins: 1800,
        annual_maint: 750,
        mileage: null,
        resale: 32000,
        resale_ratio: 0.41,
      },
    ],
  },
];

const vehicles = data[0].vehicles;

// Define vehicle types if needed
const vehicleTypes = ["gas", "hybrid", "phev", "ev"];

// Create SVG
const svg = d3
  .select("#chart-area")
  .append("svg")
  .attr("width", 800)
  .attr("height", 800)
  .append("g")
  .attr("transform", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`);

// Define scales
const x = d3.scaleBand()
  .domain(vehicles.map(d => d.model))
  .range([0, WIDTH])
  .padding(0.1);

const y = d3.scaleLinear()
  .domain([30000, d3.max(vehicles, d => d.purchase_price) + 100000])
  .range([HEIGHT, 0]);

// Define a color scale
const color = d3.scaleOrdinal()
  .domain(vehicleTypes)
  .range(["#1f77b4", "#ff7f0e", "#2ca02c", "#d62728"]); // Customize colors as needed

// Add axes
svg.append("g")
  .attr("transform", `translate(0, ${HEIGHT})`)
  .call(d3.axisBottom(x))
  .selectAll("text")
  .attr("text-anchor", "end")
  .attr("transform", "rotate(-40)");

svg.append("g")
  .call(d3.axisLeft(y));

// Draw circles
svg.selectAll("circle")
  .data(vehicles)
  .enter()
  .append("circle")
  .attr("cx", d => x(d.model) + x.bandwidth() / 2)
  .attr("cy", d => y(d.purchase_price))
  .attr("r", 10)
  .attr("fill", d => color(d.type)); // Use the color scale

// Add labels
svg.append("text")
  .attr("x", WIDTH / 2)
  .attr("y", HEIGHT + 120)
  .attr("text-anchor", "middle")
  .text("Vehicle Model");

svg.append("text")
  .attr("transform", "rotate(-90)")
  .attr("x", -HEIGHT / 2)
  .attr("y", -MARGIN.LEFT + 20)
  .attr("text-anchor", "middle")
  .text("Cost (CAN $)")
  